<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
                           http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.0.xsd">


    <!-- **************************************************************** -->
    <!--  RESOURCE FOLDERS CONFIGURATION                                  -->
    <!--  Dispatcher configuration for serving static resources           -->
    <!-- **************************************************************** -->
    <mvc:resources location="/images/" mapping="/images/**"/>
    <mvc:resources location="/css/" mapping="/css/**"/>


    <!-- **************************************************************** -->
    <!--  SPRING ANNOTATION PROCESSING                                    -->
    <!-- **************************************************************** -->
    <mvc:annotation-driven conversion-service="conversionService"/>
    <context:component-scan base-package="thymeleafexamples.stsm"/>
    <context:annotation-config/>

    <!-- **************************************************************** -->
    <!--  MESSAGE EXTERNALIZATION/INTERNATIONALIZATION                    -->
    <!--  Standard Spring MessageSource implementation                    -->
    <!-- **************************************************************** -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="Messages"/>
    </bean>


    <!-- **************************************************************** -->
    <!--  CONVERSION SERVICE                                              -->
    <!--  Standard Spring formatting-enabled implementation               -->
    <!-- **************************************************************** -->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="formatters">
            <set>
                <bean class="thymeleafexamples.stsm.web.conversion.VarietyFormatter"/>
                <bean class="thymeleafexamples.stsm.web.conversion.DateFormatter"/>
            </set>
        </property>
    </bean>


    <!-- **************************************************************** -->
    <!--  THYMELEAF-SPECIFIC ARTIFACTS                                    -->
    <!--  TemplateResolver <- TemplateEngine <- ViewResolver              -->
    <!-- **************************************************************** -->

    <!-- THYMELEAF: Template Resolver for email templates -->
    <bean id="emailTemplateResolver" class="org.thymeleaf.templateresolver.ClassLoaderTemplateResolver">
        <property name="prefix" value="mail/" />
        <property name="templateMode" value="HTML5" />
        <property name="characterEncoding" value="UTF-8" />
        <property name="order" value="1" />
    </bean>

    <!-- THYMELEAF: Template Resolver for webapp pages   -->
    <!-- (we would not need this if our app was not web) -->
    <bean id="webTemplateResolver" class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
        <property name="prefix" value="/WEB-INF/templates/" />
        <property name="templateMode" value="HTML5" />
        <property name="characterEncoding" value="UTF-8" />
        <property name="cacheable" value="false"/>
        <property name="suffix" value=".html"/>
        <property name="order" value="2" />
    </bean>

    <!-- THYMELEAF: Template Engine (Spring3-specific version) -->
    <bean id="templateEngine" class="org.thymeleaf.spring3.SpringTemplateEngine">
        <property name="templateResolvers">
            <set>
                <ref bean="emailTemplateResolver" />
                <ref bean="webTemplateResolver" />
            </set>
        </property>
    </bean>

    <!-- THYMELEAF: View Resolver - implementation of Spring's ViewResolver interface -->
    <!-- (we would not need this if our app was not web)                              -->
    <bean id="viewResolver" class="org.thymeleaf.spring3.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine" />
        <property name="characterEncoding" value="UTF-8" />
    </bean>

    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
        <property name="order" value="3"/>
    </bean>

    <bean name ="smsg" class="org.springframework.http.converter.StringHttpMessageConverter">
        <constructor-arg>
            <bean class="java.nio.charset.Charset" factory-method="forName">
                <constructor-arg value="UTF-8"/>
            </bean>
        </constructor-arg>
    </bean>






</beans>


